<pipelines>
  
  <!--no alpha testing, no specular, no shadow -->
  <pipeline name="object_pipeline">
    <input-layout>
      <element semantic="POSITION" format="float3"></element>
      <element semantic="NORMAL" format="float3"></element>
      <element semantic="TEXCOORD" format="float2"></element>
    </input-layout>
    <shaders>
      <vertex-shader file="objects.hlsl" main="vs_main">
      </vertex-shader>
      <pixel-shader file="objects.hlsl" main="ps_main">
        <variable name="gLight" value="light" index="1"/>
      </pixel-shader>
    </shaders>
    <render-states>
      <render-state name="stencil_read_mask" value="0x0000ffff"/>
    </render-states>
    <samplers>
      <sampler name="gSampleState"
                 addressU="border"
                 addressV="border"
                 filter="MIN_MAG_MIP_LINEAR"
                 border-color="0.0f, 0.0f, 0.0f, 0.0f"/>
    </samplers>
  </pipeline>
  
  
  <!--for alpha testing, no specular, no shadow -->
  <pipeline name="alpha_pipeline" prototype="object_pipeline">
    <shaders>
      <pixel-shader>
        <macro name="ALPHA_TEST_ON"/>
      </pixel-shader>
    </shaders>
  </pipeline>

  <!--for alpha testing, no specular, have shadow -->
  <pipeline name="alpha_shadow_pipeline" prototype="object_pipeline">
    <shaders>
      <pixel-shader>
        <macro name="ALPHA_TEST_ON"/>
        <macro name="SHADOW_ON"/>
      </pixel-shader>
    </shaders>
  </pipeline>

  <!--for alpha testing, have specular, no shadow -->
  <pipeline name="alpha_specular_pipeline" prototype="object_pipeline">
    <shaders>
      <pixel-shader>
        <macro name="ALPHA_TEST_ON"/>
        <macro name="SPECULAR_ON"/>
      </pixel-shader>
    </shaders>
  </pipeline>


  <!--for alpha testing, have specular, have shadow -->
  <pipeline name="alpha_specular_shadow_pipeline" prototype="object_pipeline">
    <shaders>
      <pixel-shader>
        <macro name="SHADOW_ON"/>
        <macro name="ALPHA_TEST_ON"/>
        <macro name="SPECULAR_ON"/>
      </pixel-shader>
    </shaders>
  </pipeline>

  <!--for no alpha testing, have specular, no shadow -->
  <pipeline name="specular_pipeline" prototype="object_pipeline">
    <shaders>
      <pixel-shader>
        <macro name="SPECULAR_ON"/>
      </pixel-shader>
    </shaders>
  </pipeline>

  <!--for no alpha testing, have specular, have shadow -->
  <pipeline name="specular_shadow_pipeline" prototype="object_pipeline">
    <shaders>
      <pixel-shader>
        <macro name="SPECULAR_ON"/>
        <macro name="SHADOW_ON"/>
      </pixel-shader>
    </shaders>
  </pipeline>
  
  <!--for no alpha testing, no specular, have shadow -->
  <pipeline name="shadow_pipeline" prototype="object_pipeline">
    <shaders>
      <pixel-shader>
        <macro name="SHADOW_ON"/>
      </pixel-shader>
    </shaders>
  </pipeline>

  <!-- for shadow map, no alpha test-->
  <pipeline name="object_shadow_map_pipeline" prototype="object_pipeline">
    <shaders>
      <vertex-shader main="shadow_vs_main">
      </vertex-shader>
      <pixel-shader file="null"/>
    </shaders>
  </pipeline>

  <!-- for shadow map, have alpha test-->
  <pipeline name="alpha_shadow_map_pipeline" prototype="object_shadow_map_pipeline">
    <shaders>
      <pixel-shader file="objects.hlsl" main="shadow_ps_main">
        <macro name="ALPHA_TEST_ON"/>
      </pixel-shader>
    </shaders>
  </pipeline>
  

<!--//////////////////////////////////////////////////////////////////////////////////////-->
  <!--no alpha testing, no specular, no shadow -->
  <pipeline name="defer_object_pipeline">
    <input-layout>
      <element semantic="POSITION" format="float3"></element>
      <element semantic="NORMAL" format="float3"></element>
      <element semantic="TEXCOORD" format="float2"></element>
    </input-layout>
    <shaders>
      <vertex-shader file="objects.hlsl" main="vs_main">
      </vertex-shader>
      <pixel-shader file="objects.hlsl" main="defer_ps_main">
      </pixel-shader>
    </shaders>
    <render-states>
      <render-state name="stencil_read_mask" value="0x0000ffff"/>
    </render-states>
    <samplers>
      <sampler name="gSampleState"
                 addressU="border"
                 addressV="border"
                 filter="MIN_MAG_MIP_LINEAR"
                 border-color="0.0f, 0.0f, 0.0f, 0.0f"/>
    </samplers>
  </pipeline>
  
  
  <!--for alpha testing, no specular, no shadow -->
  <pipeline name="defer_alpha_pipeline" prototype="defer_object_pipeline">
    <shaders>
      <pixel-shader>
        <macro name="ALPHA_TEST_ON"/>
      </pixel-shader>
    </shaders>
  </pipeline>

  <!--for alpha testing, no specular, have shadow -->
  <pipeline name="defer_alpha_shadow_pipeline" prototype="defer_object_pipeline">
    <shaders>
      <pixel-shader>
        <macro name="ALPHA_TEST_ON"/>
        <macro name="SHADOW_ON"/>
      </pixel-shader>
    </shaders>
  </pipeline>
  
  <!--for no alpha testing, no specular, have shadow -->
  <pipeline name="defer_shadow_pipeline" prototype="defer_object_pipeline">
    <shaders>
      <pixel-shader>
        <macro name="SHADOW_ON"/>
      </pixel-shader>
    </shaders>
  </pipeline>
  
</pipelines>
