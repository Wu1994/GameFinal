<pipelines>
  <pipeline name="terrain/simple_pipeline">
    <primitive-type value="triangle_list"/>
    <input-layout>
      <element semantic="POSITION" format="float3"></element>
      <element semantic="NORMAL" format="float3"></element>
      <element semantic="TEXCOORD" format="float2"></element>
    </input-layout>
    <shaders>
      <vertex-shader file="terrain.hlsl" main="vs_main">
        <variable name="gWorld" value="world_matrix"/>
        <variable name="gViewProj" value="viewproj_matrix"/>
      </vertex-shader>
      <pixel-shader file="terrain.hlsl" main="ps_main">
        <macro name="SHADOW_ON"/>
        <variable name="gTexture" value="texture" index="0"/>
        <variable name="gLight" value="light" index="1"/>
        <variable name="gEyePos" value="camera_position"/>
        <variable name="gFrustumPlanes" value="frustum"/>
        <variable name="gTireTrailTexture" value="texture" index="4" update-frequency="object"/>
      </pixel-shader>
    </shaders>
    <render-states>
      <render-state name="stencil_read_mask" value="0x0000ffff"/>
      
      <!--<render-state name="fill_mode" value="wireframe"/>-->
    </render-states>
    <samplers>
      <sampler name="gSampleState"
                 addressU="wrap"
                 addressV="wrap"
                 filter="MIN_MAG_MIP_LINEAR"
                 border-color="1.0f, 1.0f, 0.0f, 1.0f"/>
    </samplers>
  </pipeline>

  <pipeline name="terrain/tessellation_pipeline">
    <primitive-type value="4_CONTROL_POINT_PATCHLIST"/>
    <input-layout>
      <element semantic="POSITION" format="float3"></element>
      <element semantic="TEXCOORD" format="float2"></element>
      <element semantic="BOUNDS" format="float2"></element>
    </input-layout>
    <shaders>
      <vertex-shader file="lod_terrain.hlsl" main="vs_main">
        <variable name="gWorld" value="world_matrix"/>
      </vertex-shader>
      <hull-shader file="lod_terrain.hlsl" main="hs_main">
        <variable name="gEyePos" value="camera_position"/>
        <variable name="gFrustumPlanes" value="frustum"/>
      </hull-shader>
      <domain-shader file="lod_terrain.hlsl" main="ds_main">
        <variable name="gEyePos" value="camera_position"/>
        <variable name="gHeightScale" value="terrain_height_scale"/> 
        <variable name="gHeightTexture" value="terrain_heightmap"/>
        <variable name="gViewProj" value="viewproj_matrix"/>
        <variable name="gTexelCellSpaceU" value="inverse_terrain_row_cell"/>
        <variable name="gTexelCellSpaceV" value="inverse_terrain_row_cell"/>
        <variable name="gWorldCellSpace" value="terrain_vertex_space"/>
        
      </domain-shader>
      
      <pixel-shader file="lod_terrain.hlsl" main="ps_main">
        <macro name="SHADOW_ON"/>
        <variable name="gLight" value="light" index="1"/>
        <variable name="gMaterial" value="material_color"/>
        <variable name="gEyePos" value="camera_position"/>
        <variable name="gTireTrailTexture" value="texture" index="4" update-frequency="object"/>
      </pixel-shader>
    </shaders>
    <render-states>
      <render-state name="stencil_read_mask" value="0x0000ffff"/>
    </render-states>
    <samplers>
      <sampler name="gHeightTextureSampleState"
                 addressU="clamp"
                 addressV="clamp"
                 filter="MIN_MAG_LINEAR_MIP_POINT"
                 border-color="1.0f, 1.0f, 0.0f, 1.0f"/>

      <sampler name="gSampleState"
                  addressU="wrap"
                  addressV="wrap"
                  filter="MIN_MAG_MIP_LINEAR"
                  border-color="1.0f, 1.0f, 0.0f, 1.0f"/>
      
    </samplers>
  </pipeline>


  <pipeline name="terrain/defer_simple_pipeline" prototype="terrain/simple_pipeline">
    <shaders>
      <pixel-shader file="terrain.hlsl" main="defer_ps_main">
      </pixel-shader>
    </shaders>
  </pipeline>

  <pipeline name="terrain/defer_tessellation_pipeline" prototype="terrain/tessellation_pipeline">
    <shaders>
      <pixel-shader main="defer_ps_main">
      </pixel-shader>
    </shaders>
  </pipeline>
</pipelines>

