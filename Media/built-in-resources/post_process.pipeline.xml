<pipelines>
  
  <pipeline name="gf/blur4">
    <input-layout>
      <element semantic="POSITION" format="float3"></element>
    </input-layout>

    <shaders>
      <vertex-shader file="post_process.hlsl" main="vs_main"/>
      <pixel-shader  file="post_process.hlsl" main="ps_blur4">
        <variable name="gBlurDistance" value="m_BlurDistance"/>
      </pixel-shader>
    </shaders>

    <render-states>
      <render-state name="depth_enable" value="false"/>
    </render-states>

    <samplers>
      <sampler name="gSamplerState" addressU="clamp" addressV="clamp" filter="MIN_MAG_MIP_POINT"/>
    </samplers>  
  </pipeline>

  <pipeline name="gf/blur8">
    <input-layout>
      <element semantic="POSITION" format="float3"></element>
    </input-layout>

    <shaders>
      <vertex-shader file="post_process.hlsl" main="vs_main"/>
      <pixel-shader  file="post_process.hlsl" main="ps_blur8">
        <variable name="gBlurDistance" value="m_BlurDistance"/>
      </pixel-shader>
    </shaders>

    <render-states>
      <render-state name="depth_enable" value="false"/>
    </render-states>

    <samplers>
      <sampler name="gSamplerState" addressU="clamp" addressV="clamp" filter="MIN_MAG_MIP_POINT"/>
    </samplers>
  </pipeline>

  <pipeline name="gf/gauss_vertical_blur">
    <input-layout>
      <element semantic="POSITION" format="float3"></element>
    </input-layout>

    <shaders>
      <vertex-shader file="post_process.hlsl" main="vs_main"/>
      <pixel-shader  file="post_process.hlsl" main="ps_gauss_vertical_blur">
        <variable name="gBlurDistance" value="m_BlurDistance"/>
      </pixel-shader>
    </shaders>

    <render-states>
      <render-state name="depth_enable" value="false"/>
    </render-states>

    <samplers>
      <sampler name="gSamplerState" addressU="clamp" addressV="clamp" filter="MIN_MAG_MIP_LINEAR"/>
    </samplers>
  </pipeline>


  <pipeline name="gf/gauss_horizontal_blur">
    <input-layout>
      <element semantic="POSITION" format="float3"></element>
    </input-layout>

    <shaders>
      <vertex-shader file="post_process.hlsl" main="vs_main"/>
      <pixel-shader  file="post_process.hlsl" main="ps_gauss_horizontal_blur">
        <variable name="gBlurDistance" value="m_BlurDistance"/>
      </pixel-shader>
    </shaders>

    <render-states>
      <render-state name="depth_enable" value="false"/>
    </render-states>

    <samplers>
      <sampler name="gSamplerState" addressU="clamp" addressV="clamp" filter="MIN_MAG_MIP_LINEAR"/>
    </samplers>
  </pipeline>

  <pipeline name="gf/bloom_retain_high_brightness">
    <input-layout>
      <element semantic="POSITION" format="float3"></element>
    </input-layout>

    <shaders>
      <vertex-shader file="post_process.hlsl" main="vs_main"/>
      <pixel-shader  file="post_process.hlsl" main="ps_bloom_retain_high_brightness">
        <variable name="gThreshold" value="m_BrightThreshold"/>
      </pixel-shader>
    </shaders>

    <render-states>
      <render-state name="depth_enable" value="false"/>
    </render-states>

    <samplers>
      <sampler name="gSamplerState" addressU="clamp" addressV="clamp" filter="MIN_MAG_MIP_POINT"/>
    </samplers>
  </pipeline>

  <pipeline name="gf/bloom">
    <input-layout>
      <element semantic="POSITION" format="float3"></element>
    </input-layout>

    <shaders>
      <vertex-shader file="post_process.hlsl" main="vs_main"/>
      <pixel-shader  file="post_process.hlsl" main="ps_bloom"/>
    </shaders>

    <render-states>
      <render-state name="depth_enable" value="false"/>
    </render-states>

    <samplers>
      <sampler name="gSamplerState" addressU="clamp" addressV="clamp" filter="MIN_MAG_MIP_LINEAR"/>
    </samplers>
  </pipeline>

  <pipeline name="gf/motion_blur">
    <input-layout>
      <element semantic="POSITION" format="float3"></element>
    </input-layout>

    <shaders>
      <vertex-shader file="post_process.hlsl" main="vs_main"/>
      <pixel-shader  file="post_process.hlsl" main="ps_motion_blur">
        <variable name="gSampleNum" value="m_SampleNum"/>
      </pixel-shader>
    </shaders>

    <render-states>
      <render-state name="depth_enable" value="false"/>
    </render-states>

    <samplers>
      <sampler name="gSamplerState" addressU="clamp" addressV="clamp" filter="MIN_MAG_MIP_POINT"/>
    </samplers>
  </pipeline>

</pipelines>